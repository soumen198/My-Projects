img = imread('dog.jpg');
gray_img = im2gray(img);
levels = [128, 64, 32, 16, 8];
figure;
for i = 1:length(levels)
subplot(1,5,i);
imshow(uint8(floor(double(gray_img) / 256 * levels(i)) * (256 / levels(i))));
title([num2str(levels(i)) ' gray levels']);
end
img = imread('dog.jpg');
light = img + 50;
dark = img - 50;
contrast_manupulate = imadjust(img, stretchlim(img), []);
negative = 255 - img;
figure;
subplot(1, 4, 1), imshow(light), title('Increased Brightness');
subplot(1, 4, 2), imshow(dark), title('Decreased Brightness');
subplot(1, 4, 3), imshow(contrast_manupulate), title('Contrast Manipulated');
subplot(1, 4, 4), imshow(negative), title('Negative Image');
img = imread('dog.jpg');
hist_equ = histeq(img);
figure;
subplot(1,1,1), imshow(hist_equ), title('Histogram Equalized');
img = imread('dog.jpg');
img = im2gray(img);
prompt = 'Enter a value (0-255): ';
threshold = input(prompt);
binary_img = img > threshold;
figure;
subplot(1, 1, 1), imshow(binary_img), title(['Threshold: ', num2str(threshold)]);
img = imread('dog.jpg');
gray_img = im2gray(img);
conv_img_3x3 = imfilter(gray_img, ones(3,3) / 9);
conv_img_5x5 = imfilter(gray_img, ones(5,5) / 25);
figure;
subplot(1,2,1), imshow(conv_img_3x3), title('3x3');
subplot(1,2,2), imshow(conv_img_5x5),
img = imread('dog.jpg');
img = rgb2gray(img);
noisy_img_salt_pepper = imnoise(img, 'salt & pepper', 0.05);
noisy_img_gaussian = imnoise(noisy_img_salt_pepper, 'gaussian', 0, 0.01);
filtered_img_gaussian_3x3 = imfilter(noisy_img_gaussian, ones(3) / 9, 'symmetric');
filtered_img_gaussian_5x5 = imfilter(noisy_img_gaussian, ones(5) / 25, 'symmetric');
figure;
subplot(1, 4, 1), imshow(noisy_img_salt_pepper), title('Salt-and-Pepper Noise');
subplot(1, 4, 2), imshow(noisy_img_gaussian), title('Gaussian Noise');
subplot(1, 4, 3), imshow(filtered_img_gaussian_3x3), title('3x3 Averaging Filter');
subplot(1, 4, 4), imshow(filtered_img_gaussian_5x5), title('5x5 Averaging Filter');
img = imread('dog.jpg');
gray_img = rgb2gray(img);
noisy_img = imnoise(gray_img, 'salt & pepper', 0.02);
box_filter_3x3 = fspecial('average', [3, 3]);
box_filter_5x5 = fspecial('average', [5, 5]);
box_3x3_img = imfilter(noisy_img, box_filter_3x3);
box_5x5_img = imfilter(noisy_img, box_filter_5x5);
median_img = medfilt2(noisy_img, [3, 3]);
figure;
subplot(1,4,1), imshow(noisy_img), title('Salt-and-Pepper Noise');
subplot(1,4,2), imshow(box_3x3_img), title('3x3 Box Filter');
subplot(1,4,3), imshow(box_5x5_img), title('5x5 Box Filter');
subplot(1,4,4), imshow(median_img), title('Median Filter');
img = imread('dog.jpg');
gray_img = rgb2gray(img);
img_fft = fftshift(fft2(gray_img));
[M, N] = size(gray_img);
[X, Y] = meshgrid(1:N, 1:M);
centerX = ceil(N/2);
centerY = ceil(M/2);
distance = sqrt((X - centerX).^2 + (Y - centerY).^2);
cutoff_frequency = 30;
butter_lp = 1 ./ (1 + (distance / cutoff_frequency).^(2 * 2));
img_lp_filtered = real(ifft2(ifftshift(img_fft .* butter_lp)));
butter_hp = 1 - butter_lp;
img_hp_filtered = real(ifft2(ifftshift(img_fft .* butter_hp)));
figure;
subplot(1,3,1), imshow(gray_img), title('Original Image');
subplot(1,3,2), imshow(img_lp_filtered, []), title('Low-pass Filtered Image');
subplot(1,3,3), imshow(img_hp_filtered, []), title('High-pass Filtered Image');
img = imread('dog.jpg');
gray_img = rgb2gray(img);
img_fft = fftshift(fft2(gray_img));
[M, N] = size(gray_img);
[X, Y] = meshgrid(1:N, 1:M);
centerX = ceil(N/2);
centerY = ceil(M/2);
distance = sqrt((X - centerX).^2 + (Y - centerY).^2);
cutoff_frequency1 = 30;
cutoff_frequency2 = 80;
high_pass = distance > cutoff_frequency1;
img_hp_filtered = real(ifft2(ifftshift(img_fft .* high_pass)));
low_pass = distance < cutoff_frequency1;
img_lp_filtered = real(ifft2(ifftshift(img_fft .* low_pass)));
band_pass = (distance > cutoff_frequency1) & (distance < cutoff_frequency2);
img_bp_filtered = real(ifft2(ifftshift(img_fft .* band_pass)));
band_stop = 1 - band_pass;
img_bs_filtered = real(ifft2(ifftshift(img_fft .* band_stop)));
figure;
subplot(1,4,1), imshow(img_lp_filtered, []), title('Low-pass Filter');
subplot(1,4,2), imshow(img_hp_filtered, []), title('High-pass Filter');
subplot(1,4,3), imshow(img_bp_filtered, []), title('Band-pass Filter');
subplot(1,4,4), imshow(img_bs_filtered, []), title('Band-stop Filter');
img = imread('dog.jpg');
gray_img = rgb2gray(img);
motion_blur = fspecial('motion', 20, 45);
blurred_img = imfilter(gray_img, motion_blur);
figure;
subplot(1,2,1), imshow(gray_img), title('Original Image');
subplot(1,2,2), imshow(blurred_img), title('Motion Blurred Image');
